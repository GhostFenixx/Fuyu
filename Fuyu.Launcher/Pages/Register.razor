@using Fuyu.Backend.Core.DTO.Accounts
@using Fuyu.Launcher.Core.Services;

@inject NavigationManager Navigation

@page "/register"

<FluentStack Orientation="Orientation.Vertical">

    <!-- server settings -->
    <FluentAccordionItem Heading="Register" Expanded=true Style="width: 100%;">
	    <FluentLabel>Username:</FluentLabel>
        <FluentTextField TextFieldType="TextFieldType.Text" @bind-Value="username" Style="width: 100%;"></FluentTextField>
        <FluentLabel>Password:</FluentLabel>
        <FluentTextField TextFieldType="TextFieldType.Text" @bind-Value="password" Style="width: 100%;"></FluentTextField>
        <br />
        <br />
        <FluentButton Appearance="Appearance.Accent" OnClick="Register_Clicked">Register</FluentButton>
        <a href="/login"><FluentLabel>Login</FluentLabel></a>
    </FluentAccordionItem>

</FluentStack>

@code
{
    string username = string.Empty;
    string password = string.Empty;

    // TODO:
    // * notify user of successful registration
    // * show error on issue
    // -- seionmoya, 2024/09/08
    private void Register_Clicked(EventArgs e)
    {
        var registerStatus = RequestService.RegisterAccount(username, password);

        switch (registerStatus)
        {
            case ERegisterStatus.Success:
                break;

            case ERegisterStatus.AlreadyExists:
                return;

            case ERegisterStatus.UsernameEmpty:
                return;

            case ERegisterStatus.UsernameTooLong:
                return;

            case ERegisterStatus.UsernameInvalidCharacter:
                return;

            case ERegisterStatus.PasswordEmpty:
                return;

            case ERegisterStatus.PasswordTooShort:
                return;

            case ERegisterStatus.PasswordTooLong:
                return;

            case ERegisterStatus.PasswordInvalidCharacter:
                return;
        }

        Navigation.NavigateTo("/login");
    }
}
